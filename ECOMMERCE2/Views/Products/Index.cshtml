@model List<ECOMMERCE2.Data.Model.Product>
@{
    ViewData["Title"] = "Products";
    var categories = ViewBag.Categories as List<ECOMMERCE2.Data.Model.Category>;
    var uniqueBrands = ViewBag.UniqueBrands as List<string>;
    var orderViewModel = ViewBag.OrderViewModel as ECOMMERCE2.Models.OrderViewModel;
}
<partial name="_SinglePageHeaderPartial" />

<!-- Product Shop Start-->
<div class="container-fluid fruite py-5">
    <div class="container py-5">
        <div class="d-flex justify-content-between">
            <h1 class="mb-4 col-8">Find Your Style</h1>
            <div class="input-group my-auto">
                <input type="text" id="search-input" class="form-control" placeholder="Search by Product Name" />
                <button id="reset-button" class="btn btn-secondary">
                    <i class="bi bi-arrow-clockwise"></i>
                </button>
            </div>
        </div>
        <div class="row g-4">
            <div class="col-lg-12">
                <div class="row g-4">
                    <div class="col-lg-3">
                        <div class="bg-light ps-3 py-3 rounded d-flex justify-content-around align-items-center mb-4">
                            <label for="priceFilter">Default Sorting:</label>
                            <select id="priceFilter" name="priceFilter" class="border-0 form-select-sm bg-light me-3">
                                <option value="asc" selected=@(ViewBag.PriceFilter == "asc" ? true : false)>Ascending Price</option>
                                <option value="desc" selected=@(ViewBag.PriceFilter == "desc" ? true : false)>Descending Price</option>
                            </select>
                        </div>
                        <div class="row g-4">
                            <div class="col-lg-12">
                                <div class="mb-3">
                                    <h4>Categories</h4>
                                    <div class="fruite-categorie text-primary">
                                        <div class="mb-2">
                                            <input type="checkbox" class="category-checkbox" id="category-all" value="all" checked>
                                            <label for="category-all"><i class="fas fa-bolt"></i> All</label>
                                        </div>
                                        @foreach (var item in categories)
                                        {
                                            <div class="mb-2 text-primary">
                                                <input type="checkbox" class="category-checkbox" id="category-@item.Id" value="@item.Id">
                                                <label for="category-@item.Id"><i class="@item.Icon"></i> @item.Name</label>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <div class="mb-3">
                                    <h4>Brands</h4>
                                    <div class="mb-2">
                                        <input type="checkbox" class="brand-checkbox text-secondary" id="brand-all" value="all" checked>
                                        <label for="brand-all">All</label>
                                    </div>
                                    @foreach (var brand in uniqueBrands)
                                    {
                                        <div class="mb-2 text-secondary">
                                            <input type="checkbox" class="brand-checkbox" id="brand-@brand" value="@brand">
                                            <label for="brand-@brand">@brand</label>
                                        </div>
                                    }
                                </div>
                            </div>
                            <div class="col-lg-12">
                                <h5>Advertisement</h5>
                                <div class="position-relative">
                                    <img src="~/img/converse-ad.gif" class="img-fluid w-100 rounded" alt="">
                                    <div class="position-absolute" style="top: 75%; right: 130px; transform: translateY(-50%);">
                                        <h3 class="text-primary fw-bold">A <br> Cosmic <br> Experience</h3>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-lg-9">
                        <div class="row g-4 justify-content-start" id="product-list">
                            @foreach (var item in Model)
                            {
                                if (item.InStock && item.StockQuantity > 0 && !User.IsInRole("Admin"))
                                {
                                    <div class="col-md-6 col-lg-6 col-xl-4 product-item" data-category="@item.CategoryId" data-brand="@item.Brand" data-price="@item.Price">
                                        <div class="rounded position-relative fruite-item">
                                            <a href="/products/details/@item.Id">
                                                <div class="fruite-img" style="position: relative; width: 100%; padding-top: 100%; overflow: hidden;">
                                                    <img src="@item.Picture" class="img-fluid rounded-top" alt="" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;">
                                                </div>
                                                <div class="text-white bg-secondary px-3 py-1 rounded position-absolute" style="top: 10px; left: 10px;">@item.Brand</div>
                                                <div class="p-4 border border-secondary border-top-0 rounded-bottom">
                                                    <h4>@item.Name</h4>
                                                    <p>
                                                        @if (item.Description.Length > 27)
                                                        {
                                                            @($"{item.Description.Substring(0, 24)}...")
                                                        }
                                                        else
                                                        {
                                                            @item.Description
                                                        }
                                                    </p>
                                                    <div class="d-flex justify-content-between flex-lg-wrap">
                                                        <p class="text-dark fs-5 fw-bold mb-0">$@item.Price</p>
                                                        <a class="btn-add-to-cart btn border border-secondary rounded-pill px-3 text-primary" href="#" data-product-id="@item.Id"><i class="fa fa-shopping-bag me-2 text-primary"></i> Add to cart</a>
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                }
                                else if (User.IsInRole("Admin"))
                                {
                                    <div class="col-md-6 col-lg-6 col-xl-4 product-item" data-category="@item.CategoryId" data-brand="@item.Brand" data-price="@item.Price">
                                        <div class="rounded position-relative fruite-item">
                                            <a href="/products/details/@item.Id">
                                                <div class="fruite-img" style="position: relative; width: 100%; padding-top: 100%; overflow: hidden;">
                                                    <img src="@item.Picture" class="img-fluid rounded-top" alt="" style="position: absolute; top: 0; left: 0; width: 100%; height: 100%; object-fit: cover;">
                                                </div>
                                                <div class="text-white bg-secondary px-3 py-1 rounded position-absolute" style="top: 10px; left: 10px;">@item.Brand</div>
                                                <div class="p-4 border border-secondary border-top-0 rounded-bottom">
                                                    <h4>@item.Name</h4>
                                                    <p>
                                                        @if (item.Description.Length > 27)
                                                        {
                                                            @($"{item.Description.Substring(0, 24)}...")
                                                        }
                                                        else
                                                        {
                                                            @item.Description
                                                        }
                                                    </p>
                                                    <div class="d-flex justify-content-between flex-lg-wrap">
                                                        <p class="text-dark fs-5 fw-bold mb-0">$@item.Price</p>
                                                        <div>
                                                            <a href="@Url.Action("DeleteProduct", new { id = item.Id })" class="delete-product">
                                                                <i class="bi bi-trash border rounded py-1 px-2 text-danger"></i>
                                                            </a>

                                                            <a asp-controller="Products" asp-action="EditProduct" asp-route-id="@item.Id">
                                                                <i class="bi bi-pencil-fill border rounded py-1 px-2"></i>
                                                            </a>
                                                        </div>
                                                    </div>
                                                </div>
                                            </a>
                                        </div>
                                    </div>
                                }
                            }
                        </div>
                        <div class="col-12">
                            <div class="pagination d-flex justify-content-center mt-5">
                                @if (ViewBag.CurrentPage > 1)
                                {
                                    <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage - 1 })" class="rounded">&laquo;</a>
                                }
                                @for (int i = 1; i <= ViewBag.TotalPages; i++)
                                {
                                    <a href="@Url.Action("Index", new { page = i })" class="rounded @(i == ViewBag.CurrentPage ? "active" : "")">@i</a>
                                }
                                @if (ViewBag.CurrentPage < ViewBag.TotalPages)
                                {
                                    <a href="@Url.Action("Index", new { page = ViewBag.CurrentPage + 1 })" class="rounded">&raquo;</a>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<!-- Product Shop End-->

@section Scripts
{
    <script>
        document.getElementById('search-input').addEventListener('input', function () {
            var searchTerm = this.value;

            // Send AJAX request to fetch search results
            fetch('@Url.Action("SearchProducts", "Products")' + '?search=' + encodeURIComponent(searchTerm), {
                headers: {
                    'X-Requested-With': 'XMLHttpRequest'
                }
            })
                .then(response => response.json())
                .then(data => {
                    var productContainer = document.getElementById('product-list');
                    productContainer.innerHTML = ''; // Clear existing products

                    data.forEach(product => {
                        var productHtml = `
                            <div class="col-md-6 col-lg-6 col-xl-4 product-item" data-category="${product.categoryId}" data-brand="${product.brand}" data-price="${product.price}">
                                <div class="rounded position-relative fruite-item">
                                    <a href="/products/details/${product.id}">
                                        <div class="fruite-img" style="height:65.5%">
                                            <img src="${product.image}" class="img-fluid w-100 h-100 rounded-top" alt="">
                                        </div>
                                        <div class="text-white bg-secondary px-3 py-1 rounded position-absolute" style="top: 10px; left: 10px;">${product.brand}</div>
                                        <div class="p-4 border border-secondary border-top-0 rounded-bottom">
                                            <h4>${product.name}</h4>
                                            <p>${product.description}</p>
                                            <div class="d-flex justify-content-between flex-lg-wrap">
                                                <p class="text-dark fs-5 fw-bold mb-0">$${product.price}</p>
                                                @if (!User.IsInRole("Admin"))
                                                {
                                                    <a class="btn-add-to-cart btn border border-secondary rounded-pill px-3 text-primary" href="#" data-product-id="${product.id}"><i class="fa fa-shopping-bag me-2 text-primary"></i> Add to cart</a>
                                                }
                                                else if (User.IsInRole("Admin"))
                                                {
                                                    <div>
                                                        <a id="delete-icon-${product.id}" asp-controller="Products" asp-action="DeleteProduct" asp-route-id="${product.id}">
                                                            <i class="bi bi-trash border rounded py-1 px-2 text-danger"></i>
                                                        </a>
                                                        <a asp-controller="Products" asp-action="EditProduct" asp-route-id="${product.id}">
                                                            <i class="bi bi-pencil-fill border rounded py-1 px-2"></i>
                                                        </a>
                                                    </div>
                                                }
                                            </div>
                                        </div>
                                    </a>
                                </div>
                            </div>
                        `;
                        productContainer.innerHTML += productHtml;
                    });
                })
                .catch(error => console.error('Error fetching products:', error));
        });

        document.getElementById('reset-button').addEventListener('click', function () {
            document.getElementById('search-input').value = '';
            window.location.href = '@Url.Action("Index", "Products")';
        });

        // Add to cart functionality
        document.querySelectorAll('.btn-add-to-cart').forEach(button => {
            button.addEventListener('click', function (event) {
                event.preventDefault();

                var isAuthenticated = @User.Identity.IsAuthenticated.ToString().ToLower(); // Inject authentication status
                if (!isAuthenticated) {
                    alert("Please login to add products to cart.");
                    return;
                }

                // Proceed with adding to cart if authenticated
                var productId = this.getAttribute('data-product-id');
                window.location.href = '@Url.Action("AddToCartSingle", "Products")' + '?productId=' + productId;
            });
        });

        // Confirmation for delete action
        document.addEventListener('DOMContentLoaded', function () {
            document.querySelectorAll('.delete-product').forEach(button => {
                button.addEventListener('click', function (event) {
                    event.preventDefault();
                    if (confirm('Are you sure you want to delete this product?')) {
                        window.location.href = this.getAttribute('href');
                    }
                });
            });
        });

        // Filter functionality
        document.querySelectorAll('.category-checkbox, .brand-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', function () {
                var selectedCategories = Array.from(document.querySelectorAll('.category-checkbox:checked')).map(cb => cb.value);
                var selectedBrands = Array.from(document.querySelectorAll('.brand-checkbox:checked')).map(cb => cb.value);

                var queryParams = new URLSearchParams();
                if (!selectedCategories.includes('all')) {
                    queryParams.append('categoryFilter', selectedCategories.join(','));
                }
                if (!selectedBrands.includes('all')) {
                    queryParams.append('brandFilter', selectedBrands.join(','));
                }

                window.location.href = '@Url.Action("Index", "Products")' + '?' + queryParams.toString();
            });
        });

        document.getElementById('priceFilter').addEventListener('change', function () {
            var priceFilter = this.value;
            var currentUrl = new URL(window.location.href);
            currentUrl.searchParams.set('priceFilter', priceFilter);
            window.location.href = currentUrl.toString();
        });
    </script>
}
