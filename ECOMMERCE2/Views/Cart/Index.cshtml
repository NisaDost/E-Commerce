@model ECOMMERCE2.Data.Model.Cart
@{
    ViewData["Title"] = "Cart";
    var orderDetails = ViewBag.OrderDetails as List<ECOMMERCE2.Data.Model.OrderDetail>;
}
<partial name="_SinglePageHeaderPartial" />
<!-- Cart Page Start -->
<div class="container-fluid py-5">
    <div class="container d-flex justify-content-between py-5">
        <div class="table-responsive col-md-7">
            <table class="table">
                <thead>
                    <tr>
                        <th scope="col">Products</th>
                        <th scope="col">Name</th>
                        <th scope="col">Price</th>
                        <th scope="col">Quantity</th>
                        <th scope="col">Total</th>
                        <th scope="col">Handle</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.CartItems != null)
                    {
                        foreach (var item in Model.CartItems)
                        {
                            <tr>
                                <th scope="row">
                                    <div class="d-flex align-items-center">
                                        <img src="@item.Product.Picture" class="img-fluid me-5 rounded-circle" style="width: 80px; height: 80px;">
                                    </div>
                                </th>
                                <td>
                                    <p class="mb-0 mt-4">@item.Product.Name</p>
                                </td>
                                <td>
                                    <p class="mb-0 mt-4">@item.Product.Price $</p>
                                </td>
                                <td>
                                    <div class="input-group quantity mt-4" style="width: 100px;">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-minus rounded-circle bg-light border" data-cart-item-id="@item.CartItemId" data-edit-type="decrease">
                                                <i class="fa fa-minus" id="decrease"></i>
                                            </button>
                                        </div>
                                        <input type="text" class="form-control form-control-sm text-center border-0" value="@item.Quantity">
                                        <div class="input-group-btn">
                                            <button class="btn btn-sm btn-plus rounded-circle bg-light border" data-cart-item-id="@item.CartItemId" data-edit-type="increase">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                        </div>
                                    </div>
                                </td>
                                <td class="total-cell">
                                    <p class="mb-0 mt-4">@(item.Product.Price * item.Quantity) $</p>
                                </td>
                                <td>
                                    <button class="btn btn-md rounded-circle bg-light border mt-4 btn-delete" data-cart-item-id="@item.CartItemId">
                                        <i class="fa fa-times text-danger"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="col-md-4">
            <div class="p-4">
                <h1 class="display-6 mb-4">Cart <span class="fw-normal">Total</span></h1>
                <div class="d-flex justify-content-between mb-4">
                    <h5 class="mb-0 me-4">Subtotal:</h5>
                    <p class="mb-0" id="subtotal">
                        $
                        @if (Model != null && Model.CartItems != null)
                        {
                            foreach (var item in Model.CartItems)
                            {
                                ViewBag.Total += item.Product.Price * item.Quantity;
                            }
                            @ViewBag.Total
                            ;
                        }
                    </p>
                </div>
                <div class="d-flex justify-content-between">
                    <h5 class="mb-0 me-4">Shipping</h5>
                    <div class="">
                        <p class="mb-0">Flat rate: $@(ViewBag.Shipping)</p>
                    </div>
                </div>
            </div>
            <div class="py-4 mb-4 border-top border-bottom d-flex justify-content-between">
                <h5 class="mb-0 ps-4 me-4">Total</h5>

                <p class="mb-0 pe-4" id="total">$ @(ViewBag.Total += ViewBag.Shipping)</p>
            </div>
            <a id="checkout-button" class="btn border-secondary rounded-pill px-4 py-3 text-primary text-uppercase mb-4 ms-4" asp-controller="Cart" asp-action="Checkout">Proceed Checkout</a>
        </div>
    </div>
</div>
<!-- Cart Page End -->
@section Scripts {
    <script>
        $(document).ready(function () {
            $('.btn-minus, .btn-plus').click(function (e) {
                e.preventDefault();

                var button = $(this);
                var cartItemId = button.data('cart-item-id');
                var editType = button.data('edit-type');

                $.ajax({
                    url: '/Cart/EditCartItemQuantity',
                    type: 'POST',
                    data: {
                        cartItemId: cartItemId,
                        editType: editType
                    },
                    success: function (response) {
                        var row = button.closest('tr');
                        var quantityInput = row.find('input');

                        if (response.success) {
                            var totalCell = row.find('.total-cell p');

                            quantityInput.val(response.quantity);
                            totalCell.text(response.totalPrice.toFixed(2) + ' $');

                            // Update the subtotal and total in the cart summary
                            updateCartSummary();
                        } else {
                            alert(response.message);
                            // Revert the quantity input to the correct value in case of error
                            quantityInput.val(response.quantity);
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error updating quantity:', error);
                    }
                });
            });

            $('.btn-delete').click(function (e) {
                e.preventDefault();

                var button = $(this);
                var cartItemId = button.data('cart-item-id');

                if (confirm("Are you sure you want to delete this product from your cart?")) {
                    $.ajax({
                        url: '/Cart/DeleteCartItem',
                        type: 'POST',
                        data: {
                            cartItemId: cartItemId
                        },
                        success: function (response) {
                            if (response.success) {
                                button.closest('tr').remove();

                                // Update the subtotal and total in the cart summary
                                updateCartSummary();
                            } else {
                                alert(response.message);
                            }
                        },
                        error: function (xhr, status, error) {
                            console.error('Error deleting cart item:', error);
                        }
                    });
                }
            });

            function updateCartSummary() {
                var subtotal = 0;
                $('.table tbody tr').each(function () {
                    var totalText = $(this).find('.total-cell p').text().replace('$', '').trim();
                    var total = parseFloat(totalText);

                    if (!isNaN(total)) {
                        subtotal += total;
                    }
                });

                $('#subtotal').text(subtotal.toFixed(2) + ' $');

                var shippingText = $('#shipping').text().replace('Flat rate: $', '').trim();
                var shipping = parseFloat(shippingText);

                if (isNaN(shipping)) {
                    shipping = @ViewBag.Shipping;
                }

                var total = subtotal + shipping;
                $('#total').text(total.toFixed(2) + ' $');
            }

            $('#checkout-button').click(function (e) {
                var cartItems = $('.table tbody tr').length;

                if (cartItems === 0) {
                    e.preventDefault();
                    alert("You have no products in your cart.");
                }
            });
        });
    </script>
}
